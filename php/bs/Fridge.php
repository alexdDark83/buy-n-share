<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace bs;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class Fridge extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return Fridge
     */
    public static function getRootAsFridge(ByteBuffer $bb)
    {
        $obj = new Fridge();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return Fridge
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return ulong
     */
    public function getId()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getUlong($o + $this->bb_pos) : 0;
    }

    public function getCn()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getKey()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getLocale()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getGeo()
    {
        $obj = new Geo();
        $o = $this->__offset(12);
        return $o != 0 ? $obj->init($o + $this->bb_pos, $this->bb) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startFridge(FlatBufferBuilder $builder)
    {
        $builder->StartObject(5);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return Fridge
     */
    public static function createFridge(FlatBufferBuilder $builder, $id, $cn, $key, $locale, $geo)
    {
        $builder->startObject(5);
        self::addId($builder, $id);
        self::addCn($builder, $cn);
        self::addKey($builder, $key);
        self::addLocale($builder, $locale);
        self::addGeo($builder, $geo);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param ulong
     * @return void
     */
    public static function addId(FlatBufferBuilder $builder, $id)
    {
        $builder->addUlongX(0, $id, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addCn(FlatBufferBuilder $builder, $cn)
    {
        $builder->addOffsetX(1, $cn, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addKey(FlatBufferBuilder $builder, $key)
    {
        $builder->addOffsetX(2, $key, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLocale(FlatBufferBuilder $builder, $locale)
    {
        $builder->addOffsetX(3, $locale, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addGeo(FlatBufferBuilder $builder, $geo)
    {
        $builder->addStructX(4, $geo, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endFridge(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
