<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace bs;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class MealCard extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return MealCard
     */
    public static function getRootAsMealCard(ByteBuffer $bb)
    {
        $obj = new MealCard();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return MealCard
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getMeal()
    {
        $obj = new Meal();
        $o = $this->__offset(4);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /**
     * @return byte
     */
    public function getQty()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getByte($o + $this->bb_pos) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startMealCard(FlatBufferBuilder $builder)
    {
        $builder->StartObject(2);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return MealCard
     */
    public static function createMealCard(FlatBufferBuilder $builder, $meal, $qty)
    {
        $builder->startObject(2);
        self::addMeal($builder, $meal);
        self::addQty($builder, $qty);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addMeal(FlatBufferBuilder $builder, $meal)
    {
        $builder->addOffsetX(0, $meal, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param byte
     * @return void
     */
    public static function addQty(FlatBufferBuilder $builder, $qty)
    {
        $builder->addByteX(1, $qty, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endMealCard(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
